// Generated by CoffeeScript 1.6.3
(function() {
  "use strict";
  if (window.simsketch == null) {
    window.simsketch = {};
  }

  window.simsketch.SimSketchBehaviorbar = (function() {
    function SimSketchBehaviorbar(paper, behaviorbarID, canvasID, drawingID, behaviors) {
      var behavior, behaviorElement, behaviorList, behaviorbarElement, handle, _i, _len, _ref,
        _this = this;
      this.paper = paper;
      this.behaviors = behaviors;
      console.log("Initializing SimSketchBehaviorbar.");
      behaviorbarElement = $("#" + behaviorbarID);
      behaviorbarElement.empty();
      handle = $('<div class="simsketch_behaviorbar_handle"/>');
      behaviorbarElement.append(handle);
      behaviorList = $("<ul></ul>");
      if (window.simsketch.behaviorFactory === void 0) {
        throw "Can't find the BehaviorFactory.";
      }
      _ref = window.simsketch.behaviorFactory.getBehaviors();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        behavior = _ref[_i];
        behaviorElement = $("<li><span data-behaviorID='" + (behavior.getID()) + "' class='simsketch_behavior_template fa-stack fa-lg'><i class='fa fa-square-o fa-stack-2x'></i><i class='fa " + (behavior.getIconName()) + " fa-stack-1x'></i></span>" + (behavior.getName()) + "</li>");
        behaviorList.append(behaviorElement);
      }
      behaviorbarElement.append(behaviorList);
      $(behaviorbarElement).tabSlideOut({
        tabHandle: '.simsketch_behaviorbar_handle',
        pathToTabImage: 'images/behaviors_small.png',
        imageHeight: '134px',
        imageWidth: '40px',
        tabLocation: 'left',
        speed: 300,
        action: 'click',
        topPos: '200px',
        leftPos: '20px',
        fixedPosition: true
      });
      behaviorbarElement.find("span").draggable({
        helper: "clone"
      });
      $("#" + canvasID).droppable({
        accept: ".simsketch_behavior_template",
        drop: function(event, ui) {
          var behaviorID, droppedBehavior, newBehavior, newBehaviorElement;
          behaviorID = $(ui.helper).attr("data-behaviorID");
          droppedBehavior = window.simsketch.behaviorFactory.getBehaviorByID(behaviorID);
          newBehavior = droppedBehavior.clone();
          _this.behaviors[newBehavior.getID()] = newBehavior;
          newBehaviorElement = $("<span data-behaviorID='" + (newBehavior.getID()) + "' class='simsketch_behavior fa-stack fa-lg'><i class='fa fa-square-o fa-stack-2x'></i><i class='fa " + (newBehavior.getIconName()) + " fa-stack-1x'></i></span>");
          newBehaviorElement.css('top', ui.offset.top);
          newBehaviorElement.css('left', ui.offset.left);
          $("#" + drawingID).append(newBehaviorElement);
          return newBehaviorElement.draggable({
            containment: "#canvasID"
          });
        }
      });
    }

    SimSketchBehaviorbar;

    return SimSketchBehaviorbar;

  })();

}).call(this);

/*
//@ sourceMappingURL=SimSketchBehaviorbar.map
*/
